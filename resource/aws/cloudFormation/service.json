{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "CICCD": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "Family": {
          "Ref": "TaskDefinitionName"
        },
        "ContainerDefinitions": [
          {
            "Name": "applicationContainer",
            "MountPoints": [
              {
                "SourceVolume": "appjar",
                "ContainerPath": "/opt/application/app"
              },
              {
                "SourceVolume": "applogs",
                "ContainerPath": "/opt/application/logs"
              }
            ],
            "Image": {
              "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/golean/${CicdVersion}"
            },
            "Cpu": "100",
            "PortMappings": [
              {
                "ContainerPort": 8087,
                "HostPort": 0
              }
            ],
            "MemoryReservation": "1024",
            "Essential": "true",
            "Links": [
              "dbContainer:db"
            ],
            "Environment": [
              {
                "Name": "X_PATH",
                "Value": {
                  "Fn::Sub": "/${ApplicationContextPath}"
                }
              }
            ]
          },
          {
            "Name": "dbContainer",
            "Image": {
              "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/golean/${CicdVersion}"
            },
            "Cpu": "100",
            "MemoryReservation": "1024",
            "Essential": "true"
          }
        ]
      },
      "EnvironmentTargetGroup": {
        "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties": {
          "HealthCheckIntervalSeconds": 30,
          "HealthCheckPort": "traffic-port",
          "HealthCheckProtocol": "HTTP",
          "HealthCheckTimeoutSeconds": 5,
          "HealthyThresholdCount": 2,
          "UnhealthyThresholdCount": 10,
          "HealthCheckPath": {
            "Fn::Sub": "/${ApplicationContextPath}/"
          },
          "Matcher": {
            "HttpCode": 200
          },
          "TargetGroupAttributes": [
            {
              "Key": "deregistration_delay.timeout_seconds",
              "Value": 300
            }
          ],
          "VpcId": {
            "Ref": "VpcId"
          },
          "Protocol": "HTTP",
          "Port": 80
        }
      },
      "AppListenerRule": {
        "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
        "Properties": {
          "Actions": [
            {
              "TargetGroupArn": {
                "Ref": "EnvironmentTargetGroup"
              },
              "Type": "forward"
            }
          ],
          "Conditions": [
            {
              "Field": "path-pattern",
              "Values": [
                {
                  "Fn::Sub": "/${ApplicationContextPath}/*"
                }
              ]
            }
          ],
          "ListenerArn": {
            "Ref": "ListenerARN"
          },
          "Priority": {
            "Ref": "TargetGroupPriority"
          }
        }
      },
      "ApplicationService": {
        "Type": "AWS::ECS::Service",
        "Properties": {
          "Cluster": {
            "Ref": "ECSClusterName"
          },
          "Role": {
            "Ref": "ECSServiceRole"
          },
          "DesiredCount": {
            "Ref": "TaskDesiredCount"
          },
          "TaskDefinition": {
            "Ref": "CICCD"
          },
          "LoadBalancers": [
            {
              "ContainerName": "applicationContainer",
              "ContainerPort": 8087,
              "TargetGroupArn": {
                "Ref": "EnvironmentTargetGroup"
              }
            }
          ]
        },
        "DependsOn": "AppListenerRule"
      }
    },
    "Parameters": {
      "CicdVersion": {
        "Description": "Cicd Ap Version",
        "Type": "String",
        "Default": "ccid-app:1.0"
      },
      "VpcId": {
        "Description": "Target group name",
        "Type": "AWS::EC2::VPC:Id",
        "MinLength": "1",
        "MaxLength": "1024"
      },
      "SubnetId":{
        "Type": "List<AWS::EC2::Subnet::Id>",
        "Description": "Select subnets in your VPC"
      },
      "TaskDesiredCount": {
        "Description": "Task desired count",
        "Type": "Number",
        "MinValue": "0",
        "MaxValue": "1"
      },
      "ECSServiceRole": {
        "Description": "IAM Role name for service to update the target group",
        "Type": "String",
        "MinLength": "1",
        "MaxLength": "50"
      },
      "ECSClusterName": {
        "Description": "Name of the ECS cluster to deploy",
        "Type": "String",
        "MinLength": "1",
        "MaxLength": "50"
      }
    }
  }
}
